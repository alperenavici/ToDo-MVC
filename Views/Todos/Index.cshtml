@model IEnumerable<TodoAPP.Models.Todo>

@{
    ViewData["Title"] = "Todo List";
}

<main id="todolist">
    <h1 class="text-center">
        Todo List
    </h1>

    @if (Model.Any())
    {
        <ul class="list-group">
            @foreach (var item in Model.OrderBy(x => x.IsComplete)) 
            {
                <li class="list-group-item d-flex justify-content-between align-items-center @(item.IsComplete ? "done" : "")">
                    <span class="label">@item.Title</span>
                    <div class="actions">
                        <form asp-action="ToggleComplete" method="post" class="d-inline">
                            <input type="hidden" name="id" value="@item.Id" />
                            <button class="btn btn-close-black btn-sm" type="submit"
                                    title="@(item.IsComplete ? "Mark as Incomplete" : "Mark as Complete")">
                                <i class="bi @(item.IsComplete ? "bi-check2-square" : "bi-square")" aria-hidden="true"></i>
                            </button>
                        </form>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-close-black d-inline" title="Edit">
                            <i class="bi bi-pencil"></i>
                        </a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-close-black d-inline" title="Delete">
                            <i class="bi bi-trash"></i>
                        </a>
                    </div>
                </li>
            }
        </ul>
    }
    else
    {
        <p class="emptylist">Your todo list is empty.</p>
    }

    <form asp-action="Create" method="get" class="mt-4 d-flex justify-content-center">
        <button type="submit" class="btn btn-success mt-3  ">Add ToDo</button>
    </form>
</main>